name: Google Cloud Run Deploy
# https://github.com/google-github-actions/setup-gcloud
on:
  push:
    branches:
      - main

inputs:
  VITE_API_KEY:
    description: Firebase api key
    required: true
  VITE_AUTH_DOMAIN:
    description: Firebase auth domain
    required: true
  VITE_PROJECT_ID:
    description: Firebase project id
    required: true
  VITE_STORAGE_BUCKET:
    description: Firebase storage bucket
    required: true
  VITE_MESSAGING_SENDER_ID:
    description: Firebase messaging sender id
    required: true
  VITE_APP_ID:
    description: Firebase app it
    required: true
  VITE_MEASUREMENT_ID:
    description: Firebase measurement id
    required: true

env:
  PROJECT_ID: ${{ secrets.GCR_PROJECT }}
  RUN_REGION: europe-west3
  SERVICE_NAME: kmdb-prod

jobs:
  build:
    name: Build React App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Setup Node.js (NPM)
        uses: actions/setup-node@master
        with:
          node-version: "18.x"

      # - name: Use cached node_modules
      #   uses: actions/cache@master
      #   with:
      #     path: node_modules
      #     key: nodeModules-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       nodeModules-

      - name: Install dependencies
        run: npm install
        env:
          CI: true

      - name: Build Development
        run: npm run build
        env: VITE_API_KEY:${{inputs.VITE_API_KEY}}
          VITE_AUTH_DOMAIN:${{inputs.VITE_AUTH_DOMAIN}}
          VITE_PROJECT_ID:${{inputs.VITE_PROJECT_ID}}
          VITE_STORAGE_BUCKET:${{inputs.VITE_STORAGE_BUCKET}}
          VITE_MESSAGING_SENDER_ID:${{inputs.VITE_MESSAGING_SENDER_ID}}
          VITE_APP_ID:${{inputs.VITE_APP_ID}}
          VITE_MEASUREMENT_ID:${{inputs.VITE_MEASUREMENT_ID}}

      - name: Archive Production Artifact
        uses: actions/upload-artifact@main
        with:
          name: build
          path: dist

  deploy-gcr:
    name: Deploy to GCR
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo
        uses: actions/checkout@main

      - name: Download Artifact
        uses: actions/download-artifact@main
        with:
          name: build
          path: .docker/dist

      - name: Setup GCloud Auth
        id: auth
        uses: google-github-actions/auth@v0.4.0
        with:
          credentials_json: ${{ secrets.GCR_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.1

      # Build and push image to Google Container Registry
      - name: Build & Push
        run: |-
          gcloud builds submit \
            --quiet \
            --tag "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            ./.docker

      # Deploy image to Cloud Run
      - name: Deploy GCR
        run: |-
          gcloud run deploy "$SERVICE_NAME" \
            --quiet \
            --region "$RUN_REGION" \
            --image "gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA" \
            --platform "managed" \
            --allow-unauthenticated
